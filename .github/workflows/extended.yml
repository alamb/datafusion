# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Datafusion extended tests

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#running-your-pull_request-workflow-when-a-pull-request-merges
#
# These jobs are not run as part of PR checks as they are time-consuming
# and should not fail often.
#
# We still run them as they provide important coverage to ensure correctness
# in the (very rare) event of a hash failure or sqlite library query failure.
on:
  push:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write


jobs:
  # Notify that extended tests are running
  check_issue_comment:
    name: Check issue comment
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.comment.body == 'run extended tests'
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Running extended tests..."
            })

  # Check crate compiles and base cargo check passes
  linux-build-lib:
    name: linux build test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      (github.event.issue.pull_request && github.event.comment.body == 'run extended tests')
      # note: do not use amd/rust container to preserve disk space
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup toolchain install
      - name: Install Protobuf Compiler
        run: sudo apt-get install -y protobuf-compiler
      - name: Prepare cargo build
        run: |
          cargo check --profile ci --all-targets
          cargo clean


